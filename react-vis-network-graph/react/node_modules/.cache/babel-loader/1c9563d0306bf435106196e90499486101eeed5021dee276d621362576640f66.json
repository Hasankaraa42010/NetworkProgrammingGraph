{"ast":null,"code":"var _jsxFileName = \"C:\\\\ders2\\\\a\\u011F python\\\\sigma\\\\app\\\\application\\\\src\\\\SigmaGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Sigma from 'sigma.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SigmaGraph = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch('data.csv');\n      const textData = await response.text();\n      const parsedData = textData.split('\\n').map(row => {\n        const values = row.split(',');\n        return {\n          x: parseFloat(values[0]),\n          y: parseFloat(values[1])\n        };\n      });\n      setData(parsedData);\n    };\n    fetchData();\n  }, []);\n  if (!data.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Veriler y\\xFCkleniyor...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 28\n  }, this);\n  const graph = new Sigma({\n    container: 'graph-container',\n    graphSettings: {\n      nodes: data.map(node => ({\n        id: node.x,\n        label: node.y\n      })),\n      edges: []\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"graph-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n};\n_s(SigmaGraph, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = SigmaGraph;\nexport default SigmaGraph;\nvar _c;\n$RefreshReg$(_c, \"SigmaGraph\");","map":{"version":3,"names":["React","useState","useEffect","Sigma","jsxDEV","_jsxDEV","SigmaGraph","_s","data","setData","fetchData","response","fetch","textData","text","parsedData","split","map","row","values","x","parseFloat","y","length","children","fileName","_jsxFileName","lineNumber","columnNumber","graph","container","graphSettings","nodes","node","id","label","edges","_c","$RefreshReg$"],"sources":["C:/ders2/ağ python/sigma/app/application/src/SigmaGraph.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Sigma from 'sigma.js';\r\n\r\nconst SigmaGraph = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await fetch('data.csv');\r\n      const textData = await response.text();\r\n      const parsedData = textData.split('\\n').map((row) => {\r\n        const values = row.split(',');\r\n        return {\r\n          x: parseFloat(values[0]),\r\n          y: parseFloat(values[1]),\r\n        };\r\n      });\r\n      setData(parsedData);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (!data.length) return <div>Veriler yükleniyor...</div>;\r\n\r\n  const graph = new Sigma({\r\n    container: 'graph-container',\r\n    graphSettings: {\r\n      nodes: data.map((node) => ({\r\n        id: node.x,\r\n        label: node.y,\r\n      })),\r\n      edges: [],\r\n    },\r\n  });\r\n\r\n  return <div id=\"graph-container\"></div>;\r\n};\r\n\r\nexport default SigmaGraph;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,UAAU,CAAC;MACxC,MAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACtC,MAAMC,UAAU,GAAGF,QAAQ,CAACG,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAAEC,GAAG,IAAK;QACnD,MAAMC,MAAM,GAAGD,GAAG,CAACF,KAAK,CAAC,GAAG,CAAC;QAC7B,OAAO;UACLI,CAAC,EAAEC,UAAU,CAACF,MAAM,CAAC,CAAC,CAAC,CAAC;UACxBG,CAAC,EAAED,UAAU,CAACF,MAAM,CAAC,CAAC,CAAC;QACzB,CAAC;MACH,CAAC,CAAC;MACFV,OAAO,CAACM,UAAU,CAAC;IACrB,CAAC;IACDL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACF,IAAI,CAACe,MAAM,EAAE,oBAAOlB,OAAA;IAAAmB,QAAA,EAAK;EAAqB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEzD,MAAMC,KAAK,GAAG,IAAI1B,KAAK,CAAC;IACtB2B,SAAS,EAAE,iBAAiB;IAC5BC,aAAa,EAAE;MACbC,KAAK,EAAExB,IAAI,CAACS,GAAG,CAAEgB,IAAI,KAAM;QACzBC,EAAE,EAAED,IAAI,CAACb,CAAC;QACVe,KAAK,EAAEF,IAAI,CAACX;MACd,CAAC,CAAC,CAAC;MACHc,KAAK,EAAE;IACT;EACF,CAAC,CAAC;EAEF,oBAAO/B,OAAA;IAAK6B,EAAE,EAAC;EAAiB;IAAAT,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACzC,CAAC;AAACrB,EAAA,CAjCID,UAAU;AAAA+B,EAAA,GAAV/B,UAAU;AAmChB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}